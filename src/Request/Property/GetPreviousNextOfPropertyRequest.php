<?php
namespace Omnicasa\Request\Property;

use Omnicasa\Request\Request;

class GetPreviousNextOfPropertyRequest extends Request
{
    const ENDPOINT = 'GetPreviousNextOfProperty';

    const PROPERTIES = [
        'ID'                       => 'integer',
        'PropertyOfficeID'         => 'integer',
        'ProjectIsPublishInternet' => 'boolean',
        'ProjectIsPublishWebsite'  => 'boolean',
        'Status'                   => ['integer'],
        'SortFields'               => ['string'],
        'SkipMarqueeList'          => ['integer'],
        'MarqueeIDs'               => ['integer'],
        'Goal'                     => 'integer',
        'MinRoom'                  => 'integer',
        'MaxRoom'                  => 'integer',
        'MinBathRoom'              => 'integer',
        'MaxBathRoom'              => 'integer',
        'HasViager'                => 'boolean',
        'ViagerType'               => 'integer',
        'WebIDs'                   => ['integer'],
        'Zips'                     => ['string'],
        'CityNames'                => ['string'],
        'GeoGraphicIDs'            => ['integer'],
        'CountryIDs'               => ['integer'],
        'IsInCountryOrNot'         => 'boolean',
        'RecordFile'               => 'string',
        'RecordFiles'              => ['string'],
        'PriceFrom'                => 'numeric',
        'PriceTo'                  => 'numeric',
        'IncludePriceZero'         => 'boolean',
        'MinSurface'               => 'integer',
        'MaxSurface'               => 'integer',
        'HasGarden'                => 'boolean',
        'HasGarage'                => 'boolean',
        'HasTerrace'               => 'boolean',
        'HasFurnished'             => 'boolean',
        'HasAttic'                 => 'boolean',
        'HasLift'                  => 'boolean',
        'HasCellar'                => 'boolean',
        'HasParking'               => 'boolean',
        'AtticIDs'                 => ['integer'],
        'PersonID'                 => 'integer',
        'SelectedByPersonID'       => 'integer',
        'SiteID'                   => 'integer',
        'ConditionIDs'             => ['integer'],
        'IsInConditionOrNot'       => 'boolean',
        'LivingArea'               => 'integer',
        'IsOffice'                 => 'boolean',
        'IsConstruction'           => 'boolean',
        'BuildingID'               => 'integer',
        'ProjectID'                => 'integer',
        'GpsAddress'               => 'string',
        'GpsRadius'                => 'numeric',
        'GpsX'                     => 'float',
        'GpsY'                     => 'float',
        'EncodePolygonPath'        => 'string',
        'ChangeSince'              => 'DateTime',
        'UseRandom'                => 'boolean',
        'MainTypeIDs'              => ['integer'],
        'StreetName'               => 'string',
        'StreetOperator'           => 'integer',
        'Number'                   => 'string',
        'ContractStartSince'       => 'DateTime',
        'PetsAllowed'              => 'boolean',
        'RandomValue'              => 'integer',
        'OZAAMIDs'                 => ['integer'],
        'MainEnviromentIDs'        => ['integer'],
        'ProvinceIDs'              => ['integer'],
        'Keyword'                  => 'string',
        'IDs'                      => ['integer'],
        'PortalSiteIDs'            => ['integer'],
        'GPSSort'                  => 'string',
        'GeoCityIds'               => ['integer'],
        'RegionIds'                => ['integer'],
        'LanguageId'               => 'integer',
        'OfficeID'                 => 'integer',
    ];
}
